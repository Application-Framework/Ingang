<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.ex.AdminCourseMapper">
	
	<!-- 강의 게시판 가져오기 -->
	<select id="getCourseBoard" resultType="HashMap">
		SELECT oli.oli_no, oli.title, IFNULL(olt.name, "관리자") AS teacher_name, oli.price, oli.level, oli.reg_date 
		<include refid="courseBoardSQL" />
		ORDER BY oli_no DESC
		LIMIT #{nowPage}, #{pageSize}
	</select>
	
	<!-- 강의 게시물 총 개수 가져오기 -->
	<select id="getCoursePostCount" resultType="int">
		SELECT COUNT(*)
		<include refid="courseBoardSQL" />
	</select>
	
	<!-- 오늘부터 6일전까지의 주문내역 합계 가져오기 -->
	<select id="getCourseOrderBy7Days" resultType="HashMap">
		SELECT b.payment_date, IFNULL(a.total, 0) AS totalPayment
		FROM
			( 
				SELECT payment_date, sum(payment) total 
				FROM history_order_lecture 
				WHERE payment_date BETWEEN DATE_ADD(CURDATE(), INTERVAL -6 DAY) AND CURDATE()
				GROUP BY payment_date
			) a  
			RIGHT JOIN
			( 
				SELECT payment_date FROM 
				(select adddate('1970-01-01',t4.i*10000 + t3.i*1000 + t2.i*100 + t1.i*10 + t0.i) payment_date from
					(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t0,
					(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t1,
					(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t2,
					(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t3,
					(select 0 i union select 1 union select 2 union select 3 union select 4 union select 5 union select 6 union select 7 union select 8 union select 9) t4) v
			where payment_date BETWEEN DATE_ADD(CURDATE(),INTERVAL -6 DAY) AND CURDATE()
			) b ON a.payment_date = b.payment_date 
			ORDER BY b.payment_date ASC
	</select>
	
	<sql id="courseBoardSQL">
		FROM online_lecture_introduction oli LEFT OUTER JOIN online_lecture_teacher olt
			ON oli.olt_no = olt.olt_no
		WHERE oli.origin = 1
		<if test="searchCategory != null and searchKeyword != null">
			<choose>
				<when test="searchCategory.equals('course_title')">
					AND oli.title LIKE '%${searchKeyword}%'
				</when>
				<when test="searchCategory.equals('teacher_name')">
					AND olt.name LIKE '%${searchKeyword}%'
				</when>
				<when test="searchCategory.equals('teacher_email')">
					AND olt.email LIKE '%${searchKeyword}%'
				</when>
			</choose>
		</if>  
	</sql>
</mapper>