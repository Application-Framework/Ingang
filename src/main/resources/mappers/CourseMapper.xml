<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.ex.CourseMapper">
	
	<!-- 게시판 부분 -->
	<select id="getCoursePage" resultType="CourseDTO">
		SELECT oli.oli_no, oli.olt_no, oli.title, oli.content, oli.img_path, oli.price, oli.level
		FROM online_lecture_introduction oli, online_lecture_tag oltag, online_lecture_type oltype
		<include refid="search"></include>
		GROUP BY oli.oli_no
		<if test="order != null">
			<choose>
				<when test='order.equals("like")'>
					ORDER BY like_cnt DESC
				</when>
				
				<when test='order.equals("reply")'>
					ORDER BY reply_cnt DESC
				</when>
				
				<when test='order.equals("star")'>
					ORDER BY star_avg DESC
				</when>
				
				<when test='order.equals("price")'>
					ORDER BY price
				</when>
				
				<otherwise>
					ORDER BY oli.oli_no DESC
				</otherwise>
			</choose>
		</if>
		LIMIT #{page}, #{pageSize}
	</select>
	
	<select id="getCourseTotalCount" resultType="int">
		SELECT count(DISTINCT oli.oli_no)
		FROM online_lecture_introduction oli, online_lecture_tag oltag, online_lecture_type oltype
		<include refid="search"></include>
	</select>
	
	<sql id="search">
		WHERE oli.oli_no = oltag.oli_no AND oli.oli_no = oltype.oli_no AND enable = 1 
		
		<if test="title != null">
			AND oli.title LIKE '%${searchTitle}%'
		</if>
		 
		<if test="type != null">
			AND
			<choose>
				<when test="type.equals('it-programming-all')">
				   (oltype.type = "웹 개발" OR 
					oltype.type = "프론트엔드" OR
					oltype.type = "백엔드" OR
					oltype.type = "풀스택" OR
					oltype.type = "모바일 앱 개발" OR
					oltype.type = "게임 개발" OR
					oltype.type = "프로그래밍 언어" OR
					oltype.type = "알고리즘-자료구조" OR
					oltype.type = "데브옵스-인프라" OR
					oltype.type = "certificate-programming" OR 
					oltype.type = "개발 도구" OR
					oltype.type = "임베디드-IoT" OR
					oltype.type = "데이터 사이언스" OR
					oltype.type = "데스크톱 앱 개발" OR
					oltype.type = "dev-besides")
				</when>
				
				<otherwise>
					oltype.type = #{type}
				</otherwise>
			</choose>
		</if>
		<if test="tags != null">
			AND
			<foreach collection="tags" item="tag" separator="OR" open="(" close=")" >
				 oltag.tag = #{tag}
			</foreach>
			
		</if>
		
		<if test="level != null">
			AND oli.level = #{level} 
		</if>
		
		<if test="charge != null">
			<if test="charge.equals('free')">
				AND oli.price = 0
			</if>
			<if test="charge.equals('paid')">
				AND oli.price > 0
			</if>
		</if>
	</sql>
	
	<!-- 태그 부분 -->
	
	<select id="getCourseTags" resultType="CourseTagDTO">
		SELECT *
		FROM online_lecture_tag
		WHERE oli_no = #{oli_no}
	</select>
	
	<insert id="submitCourseTag">
		INSERT INTO online_lecture_tag (oli_no, tag)
		VALUES(#{oli_no}, #{tag})
	</insert>
	
	<delete id="deleteCourseTag">
		DELETE FROM online_lecture_tag
		WHERE oli_no = #{oli_no}
	</delete>
	
	<!-- 좋아요 부분 -->
	<select id="getCourseLikeCount" resultType="int">
		SELECT COUNT(*)
		FROM online_lecture_like
		WHERE oli_no = #{oli_no}
	</select>
	
	<insert id="insertCourseLike">
		INSERT INTO online_lecture_like (oli_no, m_no)
		SELECT #{oli_no}, #{m_no}
		WHERE NOT EXISTS (SELECT m_no FROM online_lecture_like WHERE oli_no = #{oli_no} AND m_no = #{m_no})
	</insert>
	
	<delete id="deleteCourseLike">
		DELETE FROM online_lecture_like
		WHERE oli_no = #{oli_no} AND m_no = #{m_no} 
	</delete>
	
	<select id="existCourseLike" resultType="int">
		SELECT EXISTS(SELECT * FROM online_lecture_like WHERE oli_no = #{oli_no} AND m_no = #{m_no})
	</select>
	
	<!-- 강의 페이지 부분 -->
	<!-- 강의 상세 페이지 가져오기 -->
	<select id="getCourseDetail" resultType="CourseDTO">
		SELECT *
		FROM online_lecture_introduction
		WHERE enable = 1 AND oli_no = #{oli_no}
	</select>
	
	<!-- 강의 등록 -->
	<insert id="submitCourse" useGeneratedKeys="true" keyProperty="oli_no">
		INSERT INTO online_lecture_introduction(olt_no, title, content, img_path, price, reg_date, enable) 
		VALUES(#{olt_no}, #{title}, #{content}, #{img_path}, #{price}, #{reg_date}, #{enable})
	</insert>
	
	<!-- 강의 수정 -->
	<update id="updateCourse">
		UPDATE online_lecture_introduction
		SET 
			title = #{title},
			content = #{content},
			img_path = #{img_path},
			price = #{price},
			enable = #{enable}
		WHERE oli_no = #{oli_no}
	</update>
	
	<!-- 강의 삭제 -->
	<delete id="deleteCourse">
		DELETE FROM online_lecture_introduction
		WHERE oli_no = #{oli_no}
	</delete>
	
	<!-- 수강평 부분 -->
	<select id="getCourseReplys" resultType="CourseReplyDTO">
		SELECT *
		FROM online_lecture_reply
		WHERE oli_no = #{oli_no}
	</select>
	
	<insert id="submitReply">
		INSERT INTO online_lecture_reply (oli_no, m_no, star_rating, content, reg_date)
		VALUES(#{oli_no}, #{m_no}, #{star_rating}, #{content}, #{reg_date})
	</insert>
	
	
	<!-- 강의 영상 부분 -->
	
	<insert id="submitCourseVideo">
		INSERT INTO online_lecture_video (oli_no, title, s_file_name)
		VALUES(#{oli_no}, #{title}, #{s_file_name})
	</insert>
	
	<select id="getCourseVideoList" resultType="CourseVideoDTO">
		SELECT *
		FROM online_lecture_video
		WHERE oli_no = #{oli_no}
		ORDER BY olv_no
	</select>
	
	<select id="getCourseVideo" resultType="CourseVideoDTO">
		SELECT *
		FROM online_lecture_video
		WHERE olv_no = #{olv_no}
	</select>
	
	<delete id="deleteCourseVideo">
		DELETE FROM online_lecture_video
		WHERE oli_no = #{oli_no}
	</delete>
	
	<!-- 강사 부분 -->
	
	<select id="getTeacherInfo" resultType="TeacherDTO">
		SELECT *
		FROM online_lecture_teacher
		WHERE olt_no = #{olt_no}
	</select>
	
	<select id="getTeacherInfoByM_no" resultType="TeacherDTO">
		SELECT * 
		FROM online_lecture_teacher
		WHERE m_no = #{m_no}
	</select>
	
	<select id="getTeacherName" resultType="String">
		SELECT m.m_name
		FROM online_lecture_teacher olt, member m
		WHERE olt.m_no = m.m_no AND olt_no = #{olt_no}
	</select>
	
	<insert id="insertCourseTeacher"> 
		INSERT INTO online_lecture_teacher(m_no, email, phone, name, field, introduction, link, grade, reg_date)
		VALUES(#{m_no}, #{email}, #{phone}, #{name}, #{field}, #{introduction}, #{link}, 1, #{reg_date})
	</insert>
	
	<delete id="deleteCourseTeacher">
		DELETE FROM online_lecture_teacher
		WHERE olt_no = #{olt_no}
	</delete>
	
	<select id="checkTeacherByM_no" resultType="int">
		SELECT EXISTS(SELECT * FROM online_lecture_teacher WHERE m_no = #{m_no})
	</select>
	
	<!-- 구매 기록에 추가 -->
	<insert id="insertHistoryOrderLecture">
		INSERT INTO history_order_lecture(oli_no, m_no, payment, payment_status)
		VALUES(#{oli_no}, #{m_no}, #{payment}, #{payment_status})
	</insert>
	
	<!-- 구매 기록 가져오기 -->
	<select id="getHistoryOrderLectureByOli_noM_no" resultType="HistoryOrderLectureDTO">
		SELECT * FROM history_order_lecture
		WHERE oli_no = #{oli_no} AND m_no = #{m_no}
	</select>
	
	<!-- 구매 기록 리스트 가져오기 -->
	<select id="getHistoryOrderLectureList" resultType="HistoryOrderLectureDTO">
		SELECT * FROM history_order_lecture
		WHERE m_no = #{m_no}
	</select>
</mapper>