<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.ex.CommunityBoardMapper">

	<!-- 게시판 최신순 출력 -->
	<select id="getCommunityBoardChatRegDateShowPage" resultType="hashMap">
		SELECT cb.*,
				(SELECT COUNT(*) FROM community_board_reply cbr WHERE cb.cb_no=cbr.cb_no) `reply`,
				(SELECT COUNT(*) FROM community_board_good cbg WHERE cb.cb_no=cbg.cb_no) `good`,
				m_id
		FROM community_board cb LEFT JOIN community_board_tag cbt ON cb.cb_no = cbt.cb_no
								LEFT JOIN community_tag_list ctl ON ctl.ctl_no = cbt.ctl_no
				,member m
		WHERE m.m_no = cb.m_no AND flag = 1 
		<include refid="classifyBoard"></include>
		<include refid="searchBoard"></include>
		GROUP BY cb_no 
		order by cb.reg_date DESC LIMIT #{Page}, #{PageSize};
	</select>
	
	<!-- 게시판 좋아요순 출력 -->
	<select id="getCommunityBoardChatGoodShowPage" resultType="hashMap">
		SELECT cb.*,
				(SELECT COUNT(*) FROM community_board_reply cbr WHERE cb.cb_no=cbr.cb_no) `reply`,
				(SELECT COUNT(*) FROM community_board_good cbg WHERE cb.cb_no=cbg.cb_no) `good`,
				m_id
		FROM community_board cb LEFT JOIN community_board_tag cbt ON cb.cb_no = cbt.cb_no
								LEFT JOIN community_tag_list ctl ON ctl.ctl_no = cbt.ctl_no
			,member m
		WHERE m.m_no = cb.m_no AND flag = 1
		<include refid="classifyBoard"></include>
		<include refid="searchBoard"></include>
		GROUP BY cb_no 
		order by good DESC  LIMIT #{Page}, #{PageSize};
	</select>
	
	<!-- 게시글 태그 출력 -->
	<select id="getTagCommunityBoard" resultType="hashMap">
		SELECT cbt.cb_no, ctl_name
		FROM community_board cb, community_board_tag cbt, community_tag_list ctl
		WHERE cb.cb_no = cbt.cb_no AND ctl.ctl_no = cbt.ctl_no AND cb.cb_no = #{cb_no}
	</select>
	
	<!-- 인기 태그 출력 -->
	<select id="getPopularityTagCommunity" resultType="hashMap">
		SELECT ctl_name, COUNT(*) AS cnt
		FROM communtiy_tag_serach cts, community_tag_list ctl
		WHERE cts.ctl_no = ctl.ctl_no 
				AND cts_date BETWEEN CURDATE()-45 AND CURDATE()
				AND cts_found = 1
				<include refid="classifyBoard"></include>
		GROUP BY ctl.ctl_name
		ORDER BY cnt DESC
		LIMIT 0, 9
	</select>
	
	<!-- 존재하는 태그 명인지 체크 -->
	<select id="isCheckTagSearchList" resultType="int">
		SELECT IFNULL(ctl_no, COUNT(*)) AS ctl_no
		FROM community_tag_list
		WHERE ctl_name = #{ctl_name}
	</select>
	
	<!-- 존재하지 않는 태그명이면 삽입후 값 반환-->
	<insert id="insertTagList" parameterType="CommunityTagListDTO" useGeneratedKeys="true" keyProperty="ctl_no">
		INSERT INTO community_tag_list(
			ctl_name
		)
		VALUES(
			#{ctl_name}
		)
	</insert>
	
	<!-- 커뮤니티 태그 검색 기록 -->
	<insert id="serachTagRecord">
		INSERT INTO communtiy_tag_serach(ctl_no, cts_date, classify, cts_found)
		VALUES(#{ctl_no}, CURDATE(), #{classify}, #{cts_found})
	</insert>

	<!-- 게시판 총 갯수 -->
	<select id="getCommunityBoardTotalCount" resultType="int">
		SELECT COUNT(*) 
		FROM community_board cb LEFT JOIN community_board_tag cbt ON cb.cb_no = cbt.cb_no
								LEFT JOIN community_tag_list ctl ON ctl.ctl_no = cbt.ctl_no
		WHERE flag = 1 <include refid="classifyBoard"></include><include refid="searchBoard"></include> 
	</select>
	
	<!-- 게시판 상세페이지 출력(연결된 강의 여부 확인해서) -->
	<select id="getReadCommunityBoard" resultType="hashMap">
		<if test="isOnlineLecture == 'yesExists'">
			SELECT cb.*, 
				(SELECT COUNT(*) FROM community_board_good cbg WHERE cb.cb_no=cbg.cb_no) `good`,
				(SELECT COUNT(*) FROM community_board_reply cbr WHERE cb.cb_no=cbr.cb_no) `cbr.conunt`,
				m_id,
				oli.title AS oli_title,
				oli.content AS oli_content,
				oli.img_path AS oli_img_path,
				olt.name AS olt_name
			FROM community_board cb, member m, online_lecture_introduction oli, online_lecture_teacher olt
			WHERE m.m_no = cb.m_no AND cb_no = #{cb_no} AND flag = 1 AND classify = #{classify} AND cb.oli_no = oli.oli_no AND oli.olt_no = olt.olt_no
		</if>
		<if test="isOnlineLecture == 'noExists'">
			SELECT cb.*, 
				(SELECT COUNT(*) FROM community_board_good cbg WHERE cb.cb_no=cbg.cb_no) `good`,
				(SELECT COUNT(*) FROM community_board_reply cbr WHERE cb.cb_no=cbr.cb_no) `cbr.conunt`,
				m_id
			FROM community_board cb, member m
			WHERE m.m_no = cb.m_no AND cb_no = #{cb_no} AND flag = 1 AND classify = #{classify}
		</if>
	</select>
	
	<!-- 게시판 상세페이지 댓글 출력 -->
	<select id="getReplyCommunityBoard" resultType="hashMap">
		SELECT cbr.*, m_id
		FROM community_board_reply cbr, member m
		WHERE cb_no = #{cb_no} AND m.m_no = cbr.m_no
	</select>
	
	<!-- 조회수 증가 -->
	<update id="addReadCommunityBoardHit">
		UPDATE community_board
		SET hit = hit + 1
		WHERE cb_no = #{cb_no}; 
	</update>
	
	<!-- 회원 좋아요 체크 -->
	<select id="getGoodCheckReadCommunityBoard" resultType="int">
		SELECT COUNT(*)
		FROM community_board_good
		WHERE cb_no = #{cb_no} AND  m_no = #{m_no};
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="addGoodReadCommunityBoard">
		INSERT INTO community_board_good(cb_no, m_no)
		VALUES(#{cb_no}, #{m_no})
	</insert>
	
	<!-- 좋아요 삭제 -->
	<delete id="subtractGoodReadCommunityBoard">
		DELETE FROM community_board_good
		WHERE cb_no = #{cb_no} AND m_no = #{m_no}
	</delete>
	
	<!--게시글 댓글 작성  -->
	<insert id="writeReplyCommunityBoard">
		INSERT INTO community_board_reply(cb_no, m_no, content, reg_date)
		VALUES(#{cb_no}, #{m_no}, #{content} ,NOW());
	</insert>
	
	<!--게시글 댓글 수정  -->
	<update id="updateReplyCommunityBoard">
		UPDATE community_board_reply
		SET content = #{content}
		WHERE m_no = #{m_no}; 
	</update>
	
	<!--게시글 댓글 삭제  -->	
	<delete id="deleteReplyCommunityBoard">
		DELETE FROM community_board_reply
		WHERE cbr_no = #{cbr_no}
	</delete>
	
	<!--게시글 작성-->
	<insert id="writeCommunityBoard">
		INSERT INTO community_board(oli_no, m_no, title, content, hit, reg_date, classify, flag)
		VALUES(0, #{m_no}, #{title}, #{content}, 0, NOW(), #{classify}, 1);
	</insert>
	
	<!--게시글 삭제  -->	
	<delete id="deleteCommunityBoard">
		DELETE FROM community_board
		WHERE cb_no = #{cb_no}
	</delete>
	
	<!--게시글 수정  -->
	<update id="updateCommunityBoard">
		UPDATE community_board
		SET title = #{title}, content = #{content}, classify = #{classify}
		WHERE cb_no = #{cb_no}; 
	</update>
	
	<!-- 수강후기 게시판 출력-->
	<select id="getReviewCommunityBoard" resultType="hashMap">
		SELECT olr.*, m_id, title, oli.img_path
		FROM online_lecture_reply olr, online_lecture_introduction oli, member m
		WHERE olr.oli_no = oli.oli_no AND olr.m_no = m.m_no <include refid="searchReview"></include> 
		ORDER BY reg_date DESC LIMIT #{Page}, #{PageSize};
	</select>
	
	<!-- 수강후기 게시판 총 갯수 -->
	<select id="getReviewCommunityBoardTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM online_lecture_reply olr, online_lecture_introduction oli, member m
		WHERE olr.oli_no = oli.oli_no AND olr.m_no = m.m_no <include refid="searchReview"></include> 
	</select>
	
	<sql id="searchBoard">
		<choose>
			<when test="searchKeyword == 'noContent' and searchTag == 'noTag'">
			</when>
			<when test="searchKeyword == 'noContent' and searchTag != 'noTag'">
				AND cb.cb_no = cbt.cb_no AND(
				<foreach collection="searchTag" index="index" item="item" separator="or">
					ctl_name = #{item}
				</foreach>
				)
			</when>
			<when test="searchKeyword != 'noContent' and searchTag == 'noTag'">
				AND (title LIKE  CONCAT('%', #{searchKeyword}, '%') OR content LIKE CONCAT('%', #{searchKeyword}, '%'))
			</when>
			<when test="searchKeyword != 'noContent' and searchTag != 'noTag'">
				AND (title LIKE  CONCAT('%', #{searchKeyword}, '%') OR content LIKE CONCAT('%', #{searchKeyword}, '%'))
				OR
				<foreach collection="searchTag" item="item" open="(" close=")" separator="or">
					ctl_name = #{item}
				</foreach>
			</when>
		</choose>
	</sql>
	<sql id="classifyBoard">
		<choose>
			<when test="checkClass == 'chat'">
				AND classify = 1
			</when>
			<when test="checkClass == 'questionAll'">
				AND (classify = 2 OR classify = 3)
			</when>
			<when test="checkClass == 'noSolution'">
				AND classify = 2 
			</when>
			<when test="checkClass == 'yesSolution'">
				AND classify = 3
			</when>
			<when test="checkClass == 'studieAll'">
				AND (classify = 4 OR classify = 5)
			</when>
			<when test="checkClass == 'offerStudie'">
				AND classify = 4 
			</when>
			<when test="checkClass == 'overOfferStudie'">
				AND classify = 5
			</when>
		</choose>
	</sql>
	<sql id="searchReview">
		<choose>
			<when test="searchKeyword == 'noContent'">
			</when>
			<when test="searchKeyword != 'noContent'">
				AND olr.content LIKE  CONCAT('%', #{searchKeyword}, '%')
			</when>
		</choose>
	</sql>
	
	<!--  게시판 해결됨, 모집종료로 변경 -->
	<update id="updateCompletedCommunityBoard">
		UPDATE community_board
		SET classify = #{classify}
		WHERE cb_no = #{cb_no}; 
	</update>
	
	<!-- 1:1문의하기 게시판 출력 -->
	<select id="getCommunityBoardInquiryPage" resultType="hashMap">
		SELECT i.*, m.m_id, m.m_name
		FROM inquiry i, member m
		WHERE i.m_no = m.m_no
		<include refid="searchInauiry"></include> 
		ORDER BY i.reg_date DESC
		LIMIT #{Page}, #{PageSize};
	</select>
	
	<!-- 1:1문의하기 게시판 총 갯수 -->
	<select id="getCommunityBoardInquiryPageTotalCount" resultType="int">
		SELECT COUNT(*)
		FROM inquiry i, member m
		WHERE i.m_no = m.m_no 
		<include refid="searchInauiry"></include> 
	</select>
	
	<!--1:1 문의하기 작성-->
	<insert id="writeInquiry">
		INSERT INTO inquiry(m_no, category, title, content, statement ,reg_date)
		VALUES(#{m_no}, #{category}, #{title}, #{content}, 0, NOW());
	</insert>
	
	<!--1:1 문의하기 상세페이지  -->
	<select id="getInquiryViewPage" resultType="hashMap">
		SELECT i.*, ia.*, m.m_id, m.m_name
		FROM inquiry i LEFT OUTER join inquiry_answer ia ON ia.inq_no = i.inq_no , member m
		WHERE i.inq_no = #{inq_no} AND i.m_no = m.m_no; 
	</select>
	
	<!--1:1 문의하기 삭제  -->
	<delete id="deleteInquiry">
		DELETE FROM inquiry
		WHERE inq_no = #{inq_no}
	</delete>
	
	<!--1:1 문의하기 답변 작성-->
	<insert id="writeInquiryAnswer">
		INSERT INTO inquiry_answer(inq_no, ia_content, ia_reg_date)
		VALUES(#{inq_no}, #{ia_content}, NOW())
	</insert>
	
	<!--1:1 문의하기 답변 삭제  -->
	<delete id="deleteInquiryAnswer">
		DELETE FROM inquiry_answer
		WHERE ia_no = #{ia_no}
	</delete>
	
	<!-- 1:1문의 답변 등록시 답변완료로 변경 -->
	<update id="updateStatementAnswerOk">
		UPDATE inquiry SET statement = 2 WHERE inq_no = #{inq_no}
	</update>
	
	<!-- 1:1문의 답변 보류상태로 변경 -->
	<update id="updateStatementAnswerDelay">
		UPDATE inquiry SET statement = 1 WHERE inq_no = #{inq_no}
	</update>
	
	<!-- 1:1문의 답변 대기상태로 변경 -->
	<update id="updateStatementAnswerDelete">
		UPDATE inquiry SET statement = 0 WHERE inq_no = #{inq_no}
	</update>
	
	<!-- 1:1문의 답변 수정-->
	<update id="updateInquiryAnswer">
		UPDATE inquiry_answer 
		SET ia_content = #{ia_content},
			ia_reg_date = NOW()
		WHERE ia_no = #{ia_no}
	</update>
	
	<sql id="searchInauiry">
		<if test="searchKeyword != null and searchType != null">
			<choose>
				<when test="searchType == 'title'">
					AND i.title LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType == 'category'">
					AND i.category LIKE CONCAT('%', #{searchKeyword}, '%')
				</when>
				<when test="searchType == 'm_id'">
					AND m.m_id LIKE  CONCAT('%', #{searchKeyword}, '%')
				</when>
			</choose>
		</if>
	</sql>
	
	<!--홍일 작성 아래  -->
	<!-- 2022-09-03 김홍일 / 강의 상세 페이지의 커뮤니티 탭 조건 -->
	<sql id="selectCommunityBoardByOli_noCondition">
		WHERE oli_no = #{oli_no} AND 
		<choose>
			<when test="classify == 2">classify IN (2, 3)</when>
			<when test="classify == 4">classify IN (4, 5)</when>
			<otherwise>classify = #{classify}</otherwise>
		</choose> AND
			(title LIKE '%${search}%' OR 
			content LIKE '%${search}%')
	</sql>
	<!-- 2022-09-02 김홍일 / 강의 상세 페이지의 커뮤니티 탭에 표시될 내용 -->
	<select id="selectCommunityBoardByOli_no" resultType="CommunityBoardDTO">
		SELECT * FROM community_board
		<include refid="selectCommunityBoardByOli_noCondition"/>
		ORDER BY reg_date DESC
		LIMIT #{page}, #{pageSize}
	</select>
	
	<!-- 2022-09-02 김홍일 / 강의 상세 페이지의 커뮤니티 탭에 표시될 내용 개수 -->
	<select id="selectCommunityBoardTotalCountByOli_no" resultType="int">
		SELECT COUNT(*) FROM community_board
		<include refid="selectCommunityBoardByOli_noCondition"/>
	</select>
	
	<!-- 2022-09-03 김홍일 / 게시물의 댓글 개수 가져오기 -->
	<select id="selectCommunityBoardReplyCount" resultType="int">
		SELECT COUNT(*) FROM community_board_reply
		WHERE cb_no = #{cb_no}
	</select>
	
	<!-- 2022-09-03 김홍일 / 게시물의 좋아요 개수 가져오기 -->
	<select id="selectCommunityBoardGoodCount" resultType="int">
		SELECT COUNT(*) FROM community_board_good
		WHERE cb_no = #{cb_no}
	</select>
</mapper>